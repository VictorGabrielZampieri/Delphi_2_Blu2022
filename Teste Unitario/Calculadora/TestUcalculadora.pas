unit TestUcalculadora;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, Ucalculadora;

type
  // Test methods for class TCalculador

  TestTCalculador = class(TTestCase)
  strict private
    FCalculador: TCalculador;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure Testsomar;
    procedure TestSubtrair;
    procedure Testmultiplicar;
    procedure Testdividir;
  end;

implementation

procedure TestTCalculador.SetUp;
begin
  FCalculador := TCalculador.Create;
end;

procedure TestTCalculador.TearDown;
begin
  FCalculador.Free;
  FCalculador := nil;
end;

procedure TestTCalculador.Testsomar;
var
  ReturnValue: Double;
  aNum2: Double;
  aNum1: Double;
begin
  aNum1 := 1;
  aNum2 := 2;
  // TODO: Setup method call parameters
  ReturnValue := FCalculador.somar(aNum1, aNum2);
  CheckEquals(3, ReturnValue, 'Erro no metodo Somar');
  // TODO: Validate method results
end;

procedure TestTCalculador.TestSubtrair;
var
  ReturnValue: Double;
  aNum2: Double;
  aNum1: Double;
begin
  aNum1 := 2;
  aNum2 := 2;
  // TODO: Setup method call parameters
  ReturnValue := FCalculador.Subtrair(aNum1, aNum2);
   CheckEquals(0, ReturnValue, 'Erro no metodo Subtrair');
  // TODO: Validate method results
end;

procedure TestTCalculador.Testmultiplicar;
var
  ReturnValue: Double;
  aNum2: Double;
  aNum1: Double;
begin
  aNum1 := 1;
  aNum2 := 2;
  // TODO: Setup method call parameters
  ReturnValue := FCalculador.multiplicar(aNum1, aNum2);
   CheckEquals(2, ReturnValue, 'Erro no metodo multiplicar');
  // TODO: Validate method results
end;

procedure TestTCalculador.Testdividir;
var
  ReturnValue: Double;
  aNum2: Double;
  aNum1: Double;
begin
  aNum1 := 2;
  aNum2 := 2;
  // TODO: Setup method call parameters
  ReturnValue := FCalculador.dividir(aNum1, aNum2);
   CheckEquals(1, ReturnValue, 'Erro no metodo dividir');
  // TODO: Validate method results
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTCalculador.Suite);
end.

